
/*

Problem 2:

Description:
Write a procedure, called dot_product which calculates in the variable ps, the dot(scalar) product of v1 and v2 (v1 and v2 are vectors of IR)
Write an algorithm which determines, for n pairs of given vectors, whether two vectors of given IR are orthogonal, by calling the procedure defined in the previous question. The dot product of two orthogonal vectors is zero.
Modify the previous algorithm if you use a dot_product function instead of a procedure.
*/



/*  Procedure to calculate the dot product of 2 vectors
Dot product is sum of all products of two corresponding array elements
1. Declare variables
2. Check if the two vectors are equal.
3. Multiply elements at the same position in both vector arrays
4. Sum the products of each position
*/



  // procedure declaration/creation
PROCEDURE dot_product (VAR v1: ARRAY_OF INTEGER, VAR v2: ARRAY_OF INTEGER)        
// declare local variables
VAR
    i, ps : INTEGER := 0;                                          
BEGIN
    //check if length of vectors are equal then loop through array elements to multiply and get dot product
    IF (v1.length == v2.length) THEN
        FOR i FROM 0 TO v1.length-1 STEP 1  DO
            ps = ps + v1[i] * v2[i];
        END_FOR
    END_IF
END


/*
Determine whether two vectors of given are orthogonal
Orthogonal vectors are perpendicular vectors ie. dot product = 0
1. Loop through each elements of each array.
2. Find the dot product
3. If dot product = 0 then the vectors (array) are orthogonal
*/
ALGORITHM orthogonal_procedure
//declaration of global variables
VAR
    vector_pairs : ARRAY_OF INTEGER[20][2];
    i, j, n, ps : INTEGER

BEGIN
    // to get number of vector pairs (between 1 and 20) from the user
    REPEAT
        Write ("Enter number of vectors pairs between 1 and 20:");
        Read ("n");
    UNTIL (a > 0 AND a <= 20)
    
    //loop through array elements to allow user enter vector pairs
    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM 0 TO 1 STEP 1  DO
            // enter elements of vector pairs [i][j]
            Read (vector_pairs[i][j]);
        END_FOR
    END_FOR

    // loop through vector pairs to check for orthogonality
    FOR i FROM 0 TO n-1 STEP 1  DO
        FOR j FROM 1 TO n-1 STEP step  DO
            IF (i <> j) THEN                                          // to ensure a vector pair is not multiplied by itself
                dot_product(vector_pairs[i], vector_pairs[j])      // call procedure to get dot product of 2 vector pairs
                IF (ps = 0) THEN                                    //
                    Write ("Vector Pairs ", i " and ", j " are orthogonal")     // if vectors are orthogonal, display notification
                END_IF
            END_IF
        END_FOR
    END_FOR
END


